// 37、二维数组的定义方式

#include <iostream>
using namespace std;

int main(void) {
	/*
	 1、数组类型 数组名[行数][列数];
	 2、数据类型 数组名[行数][列数] = {{数据1, 数据2, ...}, {数据3, 数据4, ...}, ...};
	 3、数据类型 数组名[行数][列数] = {数据1, 数据2, 数据3, 数据4, ...};
	 4、数据类型 数组名[][列数] = {数据1, 数据2, 数据3, 数据4, ...};
	 */

	// 1、数组类型 数组名[行数][列数];
	int array1[2][3];
	array1[0][0] = 1;
	array1[0][1] = 2;
	array1[0][2] = 3;
	array1[1][0] = 4;
	array1[1][1] = 5;
	array1[1][2] = 6;

	// 外层循环打印行数，内层循环打印列数
	for (int i = 0; i < 2; ++i) {
		for (int j = 0; j < 3; ++j) {
			cout << array1[i][j] << '\t';
		}
		cout << endl;
	}

	// 2、数据类型 数组名[行数][列数] = { {数据1, 数据2, ...}, {数据3, 数据4, ...}, ... };
	int array2[2][3] = {
		{1, 2, 3},
		{4, 5, 6},
	};
	for (int i = 0; i < 2; ++i) {
		for (int j = 0; j < 3; ++j) {
			cout << array2[i][j] << '\t';
		}
		cout << endl;
	}
	
	// 3、数据类型 数组名[行数][列数] = { 数据1, 数据2, 数据3, 数据4, ... };
	int array3[2][3] = { 1, 2, 3, 4, 5, 6 };
	for (int i = 0; i < 2; ++i) {
		for (int j = 0; j < 3; ++j) {
			cout << array3[i][j] << '\t';
		}
		cout << endl;
	}

	// 4、数据类型 数组名[][列数] = { 数据1, 数据2, 数据3, 数据4, ... };
	int array4[][3] = { 1, 2, 3, 4, 5, 6 };
	for (int i = 0; i < 2; ++i) {
		for (int j = 0; j < 3; ++j) {
			cout << array4[i][j] << '\t';
		}
		cout << endl;
	}

	// system("pause");
	return 0;
}