// 11、函数高级——函数的默认参数
// 参数列表中的形参可以有默认值
// 语法：返回值类型 函数名 (参数 = 默认值) {函数体}
//
// 注意事项：
// 1、设置了默认值的函数被调用时可以省略已设置默认的参数
// 2、如果我们传入参数，就用我们传入的参数，如果我们没有传入，就用默认值
// 3、如果函数声明有默认参数，函数的定义就不能有默认参数（产生二义性的错误）
// 4、如果某个位置已经有了默认值，那么从这个位置往后，从左到右都必须有默认值


#include <iostream>
using namespace std;

// 1、设置了默认值的函数被调用时可以省略已设置默认的参数
// 2、如果我们传入参数，就用我们传入的参数，如果我们没有传入，就用默认值
int function_1(int a, int b = 20, int c = 30) {
	return a + b + c;
}

// 注意事项：
// 1、如果某个位置已经有了默认值，那么从这个位置往后，从左到右都必须有默认值
// 防止传入参数时的二义性错误（传入的实参不知道赋值给那一个形参）
// int function_2(int a, int b = 10, int c, int d) {
// 	return a + b + c;
// }
// 以上函数错误

// 2、如果函数声明有默认参数，函数的定义就不能有默认参数（产生二义性的错误）
// 声明和定义只能有一个有默认参数
int function_3(int a = 10, int b = 10);

int function_3(int a, int b) {
	return a + b;
}

int main(void) {
	cout << function_1(10, 30) << endl;
	cout << function_3() << endl;

	// system("pause");
	return 0;
}